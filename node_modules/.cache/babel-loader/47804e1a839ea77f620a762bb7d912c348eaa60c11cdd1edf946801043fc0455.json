{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Todo App\", -1 /* HOISTED */);\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"New ToDo\", -1 /* HOISTED */);\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Add ToDo\", -1 /* HOISTED */);\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Todo List\", -1 /* HOISTED */);\nvar _hoisted_5 = [\"onClick\"];\nvar _hoisted_6 = [\"onClick\"];\nvar _hoisted_7 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers(function ($event) {\n      return $setup.addTodo();\n    }, [\"prevent\"]))\n  }, [_createCommentVNode(\" ボタンを押したら「addTodo()」を実行 \"), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.newTodo = $event;\n    }),\n    name: \"newTodo\",\n    autocomplete: \"off\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newTodo]]), _hoisted_3], 32 /* NEED_HYDRATION */), _hoisted_4, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.todos, function (todo, index) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createCommentVNode(\" indexを引数として配列「todos」を反復処理 \"), _createElementVNode(\"span\", {\n      \"class\": _normalizeClass({\n        done: todo.done\n      }),\n      onClick: function onClick($event) {\n        return $setup.doneTodo(index);\n      }\n    }, _toDisplayString(todo.content), 11 /* TEXT, CLASS, PROPS */, _hoisted_5), _createElementVNode(\"button\", {\n      onClick: function onClick($event) {\n        return $setup.removeTodo(index);\n      }\n    }, \"Remove\", 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))]), $setup.todos.length === 0 ? (_openBlock(), _createElementBlock(\"h4\", _hoisted_7, \"Empty list.\")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","key","_createElementBlock","_Fragment","_hoisted_1","onSubmit","_cache","_withModifiers","$event","$setup","addTodo","_createCommentVNode","_hoisted_2","newTodo","name","autocomplete","_hoisted_3","_hoisted_4","_renderList","todos","todo","index","_normalizeClass","done","onClick","doneTodo","content","_hoisted_5","removeTodo","_hoisted_6","length","_hoisted_7"],"sources":["/Users/yu/vue-vuex-todo-app-practice/src/App.vue"],"sourcesContent":["<template>\n    <h1>Todo App</h1>\n\n\t<form @submit.prevent=\"addTodo()\"><!-- ボタンを押したら「addTodo()」を実行 -->\n\t\t<label>New ToDo</label>\n\t\t<input\n\t\t\tv-model=\"newTodo\"\n\t\t\tname=\"newTodo\"\n\t\t\tautocomplete=\"off\"\n\t\t>\n\t\t<button>Add ToDo</button>\n\t</form>\n\n\t<h2>Todo List</h2>\n\t<ul>\n\t\t<li\n\t\t\tv-for=\"(todo, index) in todos\"\n\t\t\t:key=\"index\"\n\t\t><!-- indexを引数として配列「todos」を反復処理 -->\n\t\t\t<span\n\t\t\t\t:class=\"{ done: todo.done }\"\n\t\t\t\t@click=\"doneTodo(index)\"\n\t\t\t>\n\t\t\t\t{{ todo.content }}\n\t\t\t</span>\n\t\t\t<button @click=\"removeTodo(index)\">Remove</button>\n\t\t</li>\n\t</ul>\n\n\t<h4 v-if=\"todos.length === 0\">Empty list.</h4>\n</template>\n\n<script setup>\n\timport { computed, ref } from 'vue'\n\timport { useStore } from 'vuex'\n\t\n\tconst store = useStore()\n\tconst newTodo = ref('')\n\tconst todos = computed(() => store.getters.todos)\n\n\tconst addTodo = () => {\n\t\tif (newTodo.value.trim() === '') return\n\t\tstore.dispatch('addTodo', newTodo.value)\n\t\tnewTodo.value = ''\n\t}\n\n\tconst removeTodo = (index) => {\n\t\tstore.dispatch('removeTodo', index)\n\t}\n\n\tconst doneTodo = (todo) => {\n\t\tstore.dispatch('doneTodo', todo)\n\t}\n</script>\n\n<style lang=\"scss\">\n$border: 2px solid\n\trgba(\n\t\t$color: white,\n\t\t$alpha: 0.35,\n\t);\n$size1: 6px;\n$size2: 12px;\n$size3: 18px;\n$size4: 24px;\n$size5: 48px;\n$backgroundColor: #27292d;\n$textColor: white;\n$primaryColor: #a0a4d9;\n$secondTextColor: #1f2023;\nbody {\n\tmargin: 0;\n\tpadding: 0;\n\tfont-family: Avenir, Helvetica, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\tbackground-color: $backgroundColor;\n\tcolor: $textColor;\n\t#app {\n\t\tmax-width: 600px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tpadding: 20px;\n\t\th1 {\n\t\t\tfont-weight: bold;\n\t\t\tfont-size: 28px;\n\t\t\ttext-align: center;\n\t\t}\n\t\tform {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\twidth: 100%;\n\t\t\tlabel {\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\tinput,\n\t\t\tbutton {\n\t\t\t\theight: $size5;\n\t\t\t\tbox-shadow: none;\n\t\t\t\toutline: none;\n\t\t\t\tpadding-left: $size2;\n\t\t\t\tpadding-right: $size2;\n\t\t\t\tborder-radius: $size1;\n\t\t\t\tfont-size: 18px;\n\t\t\t\tmargin-top: $size1;\n\t\t\t\tmargin-bottom: $size2;\n\t\t\t}\n\t\t\tinput {\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder: $border;\n\t\t\t\tcolor: inherit;\n\t\t\t}\n\t\t}\n\t\tbutton {\n\t\t\tcursor: pointer;\n\t\t\tbackground-color: $primaryColor;\n\t\t\tborder: 1px solid $primaryColor;\n\t\t\tcolor: $secondTextColor;\n\t\t\tfont-weight: bold;\n\t\t\toutline: none;\n\t\t\tborder-radius: $size1;\n\t\t}\n\t\th2 {\n\t\t\tfont-size: 22px;\n\t\t\tborder-bottom: $border;\n\t\t\tpadding-bottom: $size1;\n\t\t}\n\t\tul {\n\t\t\tpadding: 10px;\n\t\t\tli {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\talign-items: center;\n\t\t\t\tborder: $border;\n\t\t\t\tpadding: $size2 $size4;\n\t\t\t\tborder-radius: $size1;\n\t\t\t\tmargin-bottom: $size2;\n\t\t\t\tspan {\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\t\t\t\t.done {\n\t\t\t\t\ttext-decoration: line-through;\n\t\t\t\t}\n\t\t\t\tbutton {\n\t\t\t\t\tfont-size: $size2;\n\t\t\t\t\tpadding: $size1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\th4 {\n\t\t\ttext-align: center;\n\t\t\topacity: 0.5;\n\t\t\tmargin: 0;\n\t\t}\n\t}\n}\n</style>"],"mappings":";8BACIA,mBAAA,CAAiB,YAAb,UAAQ;8BAGdA,mBAAA,CAAuB,eAAhB,UAAQ;8BAMfA,mBAAA,CAAyB,gBAAjB,UAAQ;8BAGjBA,mBAAA,CAAkB,YAAd,WAAS;iBAbd;iBAAA;;EAAAC,GAAA;AAAA;;uBAAAC,mBAAA,CAAAC,SAAA,SACIC,UAAiB,EAEpBJ,mBAAA,CAQO;IARAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHdC,cAAA,WAAAC,MAAA;MAAA,OAGwBC,MAAA,CAAAC,OAAO;IAAA;MAAIC,mBAAA,4BAA+B,EAChEC,UAAuB,E,gBACvBZ,mBAAA,CAIC;IATH,uBAAAM,MAAA,QAAAA,MAAA,gBAAAE,MAAA;MAAA,OAMYC,MAAA,CAAAI,OAAO,GAAAL,MAAA;IAAA;IAChBM,IAAI,EAAC,SAAS;IACdC,YAAY,EAAC;iDAFJN,MAAA,CAAAI,OAAO,E,GAIjBG,UAAyB,C,4BAG1BC,UAAkB,EAClBjB,mBAAA,CAaK,c,kBAZJE,mBAAA,CAWKC,SAAA,QA1BPe,WAAA,CAgB2BT,MAAA,CAAAU,KAAK,EAhBhC,UAgBWC,IAAI,EAAEC,KAAK;yBADpBnB,mBAAA,CAWK;MATHD,GAAG,EAAEoB;IAAK,IACXV,mBAAA,+BAAkC,EAClCX,mBAAA,CAKO;MAJL,SApBLsB,eAAA;QAAAC,IAAA,EAoBoBH,IAAI,CAACG;MAAI;MACxBC,OAAK,WAAAA,QAAAhB,MAAA;QAAA,OAAEC,MAAA,CAAAgB,QAAQ,CAACJ,KAAK;MAAA;wBAEnBD,IAAI,CAACM,OAAO,gCAvBnBC,UAAA,GAyBG3B,mBAAA,CAAkD;MAAzCwB,OAAK,WAAAA,QAAAhB,MAAA;QAAA,OAAEC,MAAA,CAAAmB,UAAU,CAACP,KAAK;MAAA;OAAG,QAAM,iBAzB5CQ,UAAA,E;oCA6BWpB,MAAA,CAAAU,KAAK,CAACW,MAAM,U,cAAtB5B,mBAAA,CAA8C,MA7B/C6B,UAAA,EA6B+B,aAAW,KA7B1CpB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}