{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { computed, ref } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'App',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var store = useStore();\n    var newTodo = ref('');\n    var todos = computed(function () {\n      return store.getters.todos;\n    });\n    var addTodo = function addTodo() {\n      if (newTodo.value.trim() === '') return;\n      store.dispatch('addTodo', newTodo.value);\n      newTodo.value = '';\n    };\n    var removeTodo = function removeTodo(index) {\n      store.dispatch('removeTodo', index);\n    };\n    var doneTodo = function doneTodo(todo) {\n      store.dispatch('doneTodo', todo);\n    };\n    var __returned__ = {\n      store: store,\n      newTodo: newTodo,\n      todos: todos,\n      addTodo: addTodo,\n      removeTodo: removeTodo,\n      doneTodo: doneTodo,\n      computed: computed,\n      ref: ref,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","ref","useStore","store","newTodo","todos","getters","addTodo","value","trim","dispatch","removeTodo","index","doneTodo","todo"],"sources":["/Users/yu/vue-vuex-todo-app-practice/src/App.vue"],"sourcesContent":["<template>\n    <h1>Todo App</h1>\n\n\t<form @submit.prevent=\"addTodo()\"><!-- ボタンを押したら「addTodo()」を実行 -->\n\t\t<label>New ToDo</label>\n\t\t<input\n\t\t\tv-model=\"newTodo\"\n\t\t\tname=\"newTodo\"\n\t\t\tautocomplete=\"off\"\n\t\t>\n\t\t<button>Add ToDo</button>\n\t</form>\n\n\t<h2>Todo List</h2>\n\t<ul>\n\t\t<li\n\t\t\tv-for=\"(todo, index) in todos\"\n\t\t\t:key=\"index\"\n\t\t><!-- indexを引数として配列「todos」を反復処理 -->\n\t\t\t<span\n\t\t\t\t:class=\"{ done: todo.done }\"\n\t\t\t\t@click=\"doneTodo(index)\"\n\t\t\t><!-- todo.doneがtrueだったら「done」というclassをつける/クリックしたらindexを引数として「doneTodo()」を実行 -->\n\t\t\t\t{{ todo.content }} <!-- todo.contentを表示 -->\n\t\t\t</span>\n\t\t\t<button @click=\"removeTodo(index)\">Remove</button><!-- クリックでindexを引数として「removeTodo()」を実行 -->\n\t\t</li>\n\t</ul>\n\n\t<h4 v-if=\"todos.length === 0\">Empty list.</h4> <!-- 配列todosの数が0の場合、このh4タグを表示 -->\n</template>\n\n<script setup>\n\timport { computed, ref } from 'vue'\n\timport { useStore } from 'vuex'\n\t\n\tconst store = useStore()\n\tconst newTodo = ref('')\n\tconst todos = computed(() => store.getters.todos)\n\n\tconst addTodo = () => {\n\t\tif (newTodo.value.trim() === '') return\n\t\tstore.dispatch('addTodo', newTodo.value)\n\t\tnewTodo.value = ''\n\t}\n\n\tconst removeTodo = (index) => {\n\t\tstore.dispatch('removeTodo', index)\n\t}\n\n\tconst doneTodo = (todo) => {\n\t\tstore.dispatch('doneTodo', todo)\n\t}\n</script>\n\n<style lang=\"scss\">\n$border: 2px solid\n\trgba(\n\t\t$color: white,\n\t\t$alpha: 0.35,\n\t);\n$size1: 6px;\n$size2: 12px;\n$size3: 18px;\n$size4: 24px;\n$size5: 48px;\n$backgroundColor: #27292d;\n$textColor: white;\n$primaryColor: #a0a4d9;\n$secondTextColor: #1f2023;\nbody {\n\tmargin: 0;\n\tpadding: 0;\n\tfont-family: Avenir, Helvetica, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\tbackground-color: $backgroundColor;\n\tcolor: $textColor;\n\t#app {\n\t\tmax-width: 600px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tpadding: 20px;\n\t\th1 {\n\t\t\tfont-weight: bold;\n\t\t\tfont-size: 28px;\n\t\t\ttext-align: center;\n\t\t}\n\t\tform {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\twidth: 100%;\n\t\t\tlabel {\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\tinput,\n\t\t\tbutton {\n\t\t\t\theight: $size5;\n\t\t\t\tbox-shadow: none;\n\t\t\t\toutline: none;\n\t\t\t\tpadding-left: $size2;\n\t\t\t\tpadding-right: $size2;\n\t\t\t\tborder-radius: $size1;\n\t\t\t\tfont-size: 18px;\n\t\t\t\tmargin-top: $size1;\n\t\t\t\tmargin-bottom: $size2;\n\t\t\t}\n\t\t\tinput {\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder: $border;\n\t\t\t\tcolor: inherit;\n\t\t\t}\n\t\t}\n\t\tbutton {\n\t\t\tcursor: pointer;\n\t\t\tbackground-color: $primaryColor;\n\t\t\tborder: 1px solid $primaryColor;\n\t\t\tcolor: $secondTextColor;\n\t\t\tfont-weight: bold;\n\t\t\toutline: none;\n\t\t\tborder-radius: $size1;\n\t\t}\n\t\th2 {\n\t\t\tfont-size: 22px;\n\t\t\tborder-bottom: $border;\n\t\t\tpadding-bottom: $size1;\n\t\t}\n\t\tul {\n\t\t\tpadding: 10px;\n\t\t\tli {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\talign-items: center;\n\t\t\t\tborder: $border;\n\t\t\t\tpadding: $size2 $size4;\n\t\t\t\tborder-radius: $size1;\n\t\t\t\tmargin-bottom: $size2;\n\t\t\t\tspan {\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\t\t\t\t.done {\n\t\t\t\t\ttext-decoration: line-through;\n\t\t\t\t}\n\t\t\t\tbutton {\n\t\t\t\t\tfont-size: $size2;\n\t\t\t\t\tpadding: $size1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\th4 {\n\t\t\ttext-align: center;\n\t\t\topacity: 0.5;\n\t\t\tmargin: 0;\n\t\t}\n\t}\n}\n</style>"],"mappings":";;AAiCC,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACnC,SAASC,QAAQ,QAAQ,MAAM;;;;;;IAE/B,IAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAME,OAAO,GAAGH,GAAG,CAAC,EAAE,CAAC;IACvB,IAAMI,KAAK,GAAGL,QAAQ,CAAC;MAAA,OAAMG,KAAK,CAACG,OAAO,CAACD,KAAK;IAAA,EAAC;IAEjD,IAAME,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;MACrB,IAAIH,OAAO,CAACI,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACjCN,KAAK,CAACO,QAAQ,CAAC,SAAS,EAAEN,OAAO,CAACI,KAAK,CAAC;MACxCJ,OAAO,CAACI,KAAK,GAAG,EAAE;IACnB,CAAC;IAED,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAK;MAC7BT,KAAK,CAACO,QAAQ,CAAC,YAAY,EAAEE,KAAK,CAAC;IACpC,CAAC;IAED,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAAI,EAAK;MAC1BX,KAAK,CAACO,QAAQ,CAAC,UAAU,EAAEI,IAAI,CAAC;IACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}